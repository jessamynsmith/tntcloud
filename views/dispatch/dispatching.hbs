<script language="javascript" type="text/javascript" src="/javascripts/p5/p5.min.js"></script>
<script language="javascript" src="/javascripts/p5/p5.dom.min.js"></script>

<!-- Title/Intro ------------------------------------------------------------>
<div class="section-intro dispatch">
<!--  <h1>Dispatching</h2> -->
</div>

<!-- Two Columns -------------------------------------------------------------->
<div class="grid-x two-column dispatching">
  <div class="dispatching">
    <!-- Column 1 --------------------------------------------------------------->
    <div class="small-6 cell col1">
      <h2>Requested</h2>
        <div id="requested" class="list"></div>
    </div>
    <!-- Column 2 --------------------------------------------------------------->
    <div class="small-6 cell col1">
      <h2>Dispatched</h2>
        <div id="dispatched" class="list"></div>
    </div>
  </div>
</div>


<script>

/*********************************
* p5 JS Library Initializer
*********************************/
function setup() {}
/********************************/

/*****************************************************************************
 * Dispatch Status = 'Dispatched'
*****************************************************************************/
// Listen for Child Events: https://firebase.google.com/docs/database/web/lists-of-data#listen_for_child_events
// Query data https://firebase.google.com/docs/reference/js/firebase.database.Query

// var dbRefRequested = firebase.database().ref().child('dispatch').orderByChild('Status').equalTo('requested');
var dbRef = firebase.database().ref().child('dispatch');

dbRef.on('value', gotData => {

  // clear the records so when value is updated new records are displayed (see bottom of code)
  var dataRows = selectAll('.data-row');
  for (var i = 0; i < dataRows.length; i++) {
    dataRows[i].remove();
  }

  // assign above core data to 'data'
  var dataVal = gotData.val();
  // Firebase keys/records: assign the core object's Firebase keys to 'keys'
  var keys = Object.keys(dataVal);
  // Loop through all the Keys/records
  for (var i = 0; i < keys.length; i++) {
    var k = keys[i];

    // Extract value from each Key record
    var BranchFrom = dataVal[k].BranchFrom;
    var BranchTo = dataVal[k].BranchTo;
    var Date = dataVal[k].Date;
    var DateTime = dataVal[k].DateTime;
    var Driver = dataVal[k].Driver;
    var Instructions = dataVal[k].Instructions;
    var Reference = dataVal[k].Reference;
    var Urgency = dataVal[k].Urgency;
    var Vendor = dataVal[k].Vendor;

    var div = createElement('div',
      `
        <div class="row expanded small-12 medium-6 large-6 columns tnt-card-output">
          <div class="">
             <div class="card-divider">
               <div>${Vendor}</div>
               <div>${Date}&nbsp;&nbsp;@&nbsp;&nbsp;${DateTime}</div>
             </div>
          </div>
          <div class="body">
            <div>From:&nbsp;${BranchFrom}&nbsp;&nbsp;&nbsp;&nbsp;To:&nbsp;${BranchTo}</div>
            <div>Reference:&nbsp;${Reference}</div>
            <div>Instructions:&nbsp;${Instructions}</div>
            <div>Driver:&nbsp;${Driver}</div>
          </div>
          <div class="footer">
            <div style="float: left;">Edit</div>
            <div style="float: right;">Delete</div>
          </div>
        </div>
      `
    );
    div.class('data-row');
    div.id(k);
    div.parent('requested');

  } // End for Loop
}); // End gotData(data)

</script>
